environment:
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    - PYTHON: "C:\\Python36"

install:
  # We need wheel installed to build wheels
  - "%PYTHON%\\python.exe -m pip install -U cython"
  - "%PYTHON%\\Scripts\\cython --cplus msgpack/_packer.pyx msgpack/_unpacker.pyx"

build: off

test_script:
  # Put your test command here.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - set PYTHON="C:\\Python27"
  - ci\\runtests.bat
  - set PYTHON="C:\\Python27-x64"
  - ci\\runtests.bat
  - set PYTHON="C:\\Python35"
  - ci\\runtests.bat
  - set PYTHON="C:\\Python35-x64"
  - ci\\runtests.bat
  - set PYTHON="C:\\Python36"
  - ci\\runtests.bat
  - set PYTHON="C:\\Python36-x64"
  - ci\\runtests.bat

after_test:
  # This step builds your wheels.
  # Again, you need to use %PYTHON% to get the correct interpreter

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*.whl

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

# vim: set shiftwidth=2
